---
layout: post
title: "linux 误删除问题如何预防"
date: 2017-10-16 13:52
comments: true
categories: linux
---

在linux做删除操作时，rm -rf 简直堪称利器，不仅不需要你确认删除，而且目录文件都能删，保证删的干干净净。但是如果你不小心命令敲错了，那就是灾难啊。别说了，我正在重装虚拟机，根目录都被删了，只因为把rm -rf ./* 敲成了 rm -rf /*。幸亏我操作的自己的虚拟机，如果是线上服务器，那我应该已经跑路了。为了不再次犯此类错误，我特定搜集了一些预防的方法。主要摘录自别人的博客，自己也记录一下，方便以后查阅：

1. 变量为空导致误删文件

```bash
base_path=/usr/sbin
tmp_file=`cmd_invalid`
# rm -rf $base_path/$tmp_file
```

这种情况下如果 cmd 执行出错或者返回为空，后果将是灾难性的，那如何防范呢?
(1)利用 shell 的变量扩展功能，如果变量为空赋给默认值或者抛出异常退出脚本：

```bash
echo ${base_path:?var is empty}/${tmp_file:?var is empty}
-bash: tmp_file: var is empty
```

(2)人肉判断变量是否为空：

```bash
[[ ${tmp_file} == "" ]] && echo 1
1
[[ -z ${tmp_file} ]] && echo 1
1
```

(3)如果变量未定义还可以开启 set 选项：

```bash
# cat a.sh
set -u
b=
echo $b
echo $a
echo 1
# bash a.sh
a.sh: line 4: a: unbound variable
```

2. 路径含有空格导致误删文件

Linux系统区分英文字符的大小写。命名目录和命名文件的规则是相同的。除非有特别的原因否则用户创建的文件和目录名要使用小写字符。大多数的Linux命令也使用小写字符。Linux系统下的文件名长度最多可到256个字符。通常情况下，文件名的字符包括：字母、数字、"."(点)、"_"(下划线)和"-"(连字符)。Linux允许在文件名中使用除上述符号之外的其它符号,但并不建议用户这样做。如果此时在/usr/lib 新建一个 abc的目录，此时我想删除 abc目录下的所有文件，你可能会这样写：

```bash
rm -rf /usr/lib/ abc/*
```

这样的后果是，你把lib目录整个都删了，空格成了参数的分隔符，而此命令只有第一个参数生效。

(1)处理掉特殊字符的方法：

* 使用转义符 \

　　虽然在文件名中尽量避免使用特殊符号，但是如果碰到这样的情形，仍可以使用转义符来读取。
　　可以转义的字符包括："?"(问号), "*"(星号), " "(空格), "$"(货币符), "&"（逻辑符）, "( )"（英文括号）等等。
　　例如，打开 Program Files (x86) 下的 Adobe 文件夹：

```bash
cd Program\ Files\ \(x86\)/Adobe
```

* 成对使用英文双引号""（推荐此方法）

终端中使用指令打开目录时，使用双引号可以保持原始路径，及时路径中包含不合法字符也没关系。使用的时候可以有两种方法：

(1). 用一对双引号把整个路径包含进去

例如，打开 ~/.wine/drive_c/Program Files (x86)/Adobe/Adobe Photoshop CS6文件夹：

```bash
cd "~/.wine/drive_c/Program Files (x86)/Adobe/Adobe Photoshop CS6"
```

这种方法使用起来最为方便，因此强烈推荐，这样可以高枕无忧地在引号内粘贴路径，并正常打开此目录。

(2). 用双引号包含某段带有非法字符的路径片段

例如，打开 Program Files (x86) 文件夹：

```bash
cd Program" Files (x86)"
```

这种方法非常灵活，双引号使用次数不限，只要成对出现即可，终端会对引号内容照单全收。

例如，打开 Program Files (x86)/Adobe/Adobe Photoshop CS6 文件夹，你还可以这样：

```bash
cd Pro"gram Fi"les" (x86)/Adobe""/Adobe "Photo"shop C"S6
```

这条指令间断、或不间断地使用了4次双引号，只要保证所有空格和括号都被包括在成对的双引号范围内，文件夹都能正常打开。
网友还有创建~作为文件夹名称的，这个就更有意思了，如果不加双引号，直接被扩展成/home/work，以后大家还是能加引号就加引号吧。

3. cd 切换目录失败，导致文件被误删

```bash
cd ooxx_path_not_exsit
rm -rf *.exe
```

cd一个不存在的目录，没有检查下是否跳转成功，直接删除。那么恭喜你，当前目录下的符合条件文件将被删除。那么如果预防呢？

(1)使用逻辑短路操作

```bash
cd path && rm -rf *.exe
```

4. 使用-i 在删除前给自己提示

当 -i 选项配合 rm 命令(也包括其他文件处理命令比如 cp 或者 mv)使用时，在删除文件前会出现一个提示。
这个提示会给你第二次机会来考虑是否真的要删除该文件 - 如果你在这个提示上选择确定，那么文件就被删除了。这种情况下，很抱歉，这个技巧并不能防止你的粗心大意。
为了 rm -i 别名替代 rm ，这样做：

```bash
alias rm='rm -i'
``
把它写到初始化脚本中，让每次删除都能提示自己，防止误删。
